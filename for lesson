
#include <iostream>
#include <ctime>
#include <cstdlib>
#include <conio.h>
#include <windows.h>

using namespace std;

const int rows = 10;
const int elements = 10;

int maxships = 10;
HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);

int matrix[rows][elements];
int row[rows];

char battle_haze[rows][elements];
int score_1 = 0;
int score_2 = 0;

void Clear()
{
    for(int i=0; i < rows; i++)
    {
        for(int j=0; j < elements; j++)
        {
            matrix[i][j] = 0;
        }
    }
}

void Clear_battle_haze()
{
    for(int i=0; i < rows; i++)
    {
        for(int j=0; j < elements; j++)
        {
            battle_haze[i][j] = '*';
        }
    }
}

void Show()
{
    cout << "  ";
    for (int i = 0; i < rows; ++i) {
        row[i] = i;
    }
    cout << " ";
    for (int i = 0; i < rows; ++i) {
        cout << row[i] << " ";
    }
    cout << endl;
    int count = 0;
    for(int i=0; i < rows; i++)
    {
        cout << count << '|' << " ";
        count++;
        for(int j=0; j < elements; j++)
        {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}

void Show_battle_haze1()
{
    for(int i=0; i < rows; i++) {
        for (int j = 0; j < elements; j++) {
            if (matrix[i][j] == 1){
                battle_haze[i][j] = '1';
            }
            if (matrix[i][j] == 2){
                battle_haze[i][j] = '*';
            }
        }
    }

    for (int i = 0; i < rows; ++i) {
        row[i] = i;
        SetConsoleTextAttribute(console,FOREGROUND_GREEN);
    }
    cout << "   ";
    for (int i = 0; i < rows; ++i) {

        cout << row[i] << " ";

    }
    cout << endl;

    int count = 0;
    for(int i=0; i < rows; i++)
    {
        cout << count << '|' << " ";
        count++;
        for(int j=0; j < elements; j++)
        {
            cout << battle_haze[i][j] << " ";
        }
        cout << endl;
    }
}

void Show_battle_haze2()
{

    for(int i=0; i < rows; i++) {
        for (int j = 0; j < elements; j++) {
            if (matrix[i][j] == 2){
                battle_haze[i][j] = '2';
            }
            if (matrix[i][j] == 1){
                battle_haze[i][j] = '*';
            }
        }
    }
    cout << "  ";
    for (int i = 0; i < rows; ++i) {
        row[i] = i;
    }
    cout << " ";
    for (int i = 0; i < rows; ++i) {
        cout << row[i] << " ";
    }
    cout << endl;

    int count = 0;
    for(int i=0; i < rows; i++)
    {
        cout << count << '|' <<" ";
        count++;
        for(int j=0; j < elements; j++)
        {
            cout << battle_haze[i][j] << " ";
        }
        cout << endl;
    }
}

int NumberOfShips1()
{
    int c = 0;
    for(int i=0; i < rows; i++)
    {
        for(int j=0; j < elements; j++)
        {
            if(matrix[i][j] == 1)
                c++;
        }
    }
    return c;
}

int NumberOfShips2()
{
    int c = 0;
    for(int i=0; i < rows; i++)
    {
        for(int j=0; j < elements; j++)
        {
            if(matrix[i][j] == 2)
                c++;
        }
    }
    return c;
}

void SetShips()
{
    int s = 0;
    while(s < maxships)
    {
        int x = rand() % rows;
        int y = rand() % elements;
        if(matrix[x][y] != 1)
        {
            s++;
            matrix[x][y] = 1;
        }
    }
    s = 0;
    while(s < maxships)
    {
        int x = rand() % rows;
        int y = rand() % elements;
        if(matrix[x][y] != 1 && matrix[x][y] != 2)
        {
            s++;
            matrix[x][y] = 2;
        }
    }
}

bool Attack(int x,int y)
{
    if(matrix[x][y] == 1)
    {
        matrix[x][y] = -1;
        battle_haze[x][y] = 'X';
        return true;
    }
    battle_haze[x][y] = 'X';
    if(matrix[x][y] == 2)
    {
        matrix[x][y] = -2;
        battle_haze[x][y] = 'X';
        return true;
    }
    battle_haze[x][y] = 'X';
    return false;
}

int main()
{
    srand(time(NULL));
    Clear();
    Clear_battle_haze();
    SetShips();
    int pos1,pos2;
    int player = 1;
    char prompt = 'w';

    while(true)
    {
        score_2 =  NumberOfShips2();
        if (score_2 == 0){
            cout << "PLAYER 1 is winner. Congratulations! " << endl;
            Show();
            system("pause");
            return 0;
        }
        if(player == 1){
            system("cls");
            cout << "PLAYER 1" << endl;
            cout << "BATTLE HAZE" << endl;
            Show_battle_haze1();
            cout << "Please input location. \n " << "Coordinate 1: "<< endl;
            cin >> pos1; // провекра на диапазон

            while (pos1 < 0 || pos1 > 9){
                cout << "Wrong location! From 0 to 9 please! \n " << "Coordinate 1: "<< endl;
                cin >> pos1;
            }
            cout << "Coordinate 2: " << endl;
            cin >> pos2; // провекра на диапазон

            while (pos2 < 0 || pos2 > 9) {
                cout << "Wrong location! From 0 to 9 please! \n " << "Coordinate 2: "<< endl;
                cin >> pos2;
            }
            if(Attack(pos1,pos2) == true) {
                if (NumberOfShips2() == score_2){
                    cout << "GENIUS! You hit in your ship!" << endl;
                    cout << "Number of your ships left: " << NumberOfShips1() << endl;
                    cout << "Number of opponent's ships left: " << NumberOfShips2() << endl;
                    getch();
                } else {
                    cout << "You got me! :)" << endl;
                    cout << "Number of opponent's ships left: " << NumberOfShips2() << endl;
                    getch();
                }
            } else {
                cout << "Sorry no ship at that position!" << endl;
                cout << "Number of opponent's ships left: " << NumberOfShips2() << endl;
                cout << "Do you want to continue (y/n)? " << endl;
                cin >> prompt; // провекра на символ
                while (prompt != 'y' && prompt != 'n'){
                    cout << "Wrong symbol! Please try - (y/n) " << endl;
                    cin >> prompt;
                }
            }
            if(prompt == 'n'){
                break;
            }


            player = 2;
        }

        score_1 =  NumberOfShips1();
        if (score_1 == 0) {
            cout << "PLAYER 2 is winner. Congratulations! " << endl;
            Show();
            system("pause");
            return 0;
        }
        if (player == 2) {
            system("cls");
            cout << "PLAYER 2" << endl;
            cout << "BATTLE HAZE" << endl;
            Show_battle_haze2();
            cout << "Please input location. \n " << "Coordinate 1: "<< endl;
            cin >> pos1; // провекра на диапазон
            while (pos1 < 0 || pos1 > 9){
                cout << "Wrong location! From 0 to 9 please! \n " << "Coordinate 1: "<< endl;
                cin >> pos1;
            }
            cout << "Coordinate 2: " << endl;
            cin >> pos2; // провекра на диапазон
            while (pos2 < 0 || pos2 > 9){
                cout << "Wrong location! From 0 to 9 please! \n " << "Coordinate 2: "<< endl;
                cin >> pos2;
            }
            if(Attack(pos1,pos2)== true) {
                if (NumberOfShips1() == score_1){
                    cout << "GENIUS! You hit in your ship!" << endl;
                    cout << "Number of your ships left: " << NumberOfShips1() << endl;
                    cout << "Number of opponent's ships left: " << NumberOfShips2() << endl;
                    getch();

                } else {
                    cout << "You got me! :)" << endl;
                    cout << "Number of opponent's ships left: " << NumberOfShips1() << endl;
                    getch();
                }
            }
            else  {
                cout << "Sorry no ship at that position!" << endl;
                cout << "Number of opponent's ships left: " << NumberOfShips1() << endl;
                cout << "Do you want to continue (y/n)? " << endl;
                cin >> prompt; // провекра на символ
                while (prompt != 'y' && prompt != 'n'){
                    cout << "Wrong symbol! Please try - (y/n) " << endl;
                    cin >> prompt;
                }
            }
            if(prompt == 'n'){
                break;
            }
            player = 1;
        }

    }
    cout << "PLAYER " << player << " LOSE" <<  endl;
    cout << "Game over!" << endl;

    Show();
    system("pause");
    return 0;
}
